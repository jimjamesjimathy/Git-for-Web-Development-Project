                    Link to codePen page:
        https://codepen.io/jimjamesjimathy/pen/yLXGmvw







                    Questions:

1. What is Semantic HTML? ------- Semantic HTML introduces meaning to the webpage instead of just presentation.

    2. What is HTML used for? ------- HTML is used for making the structure of a webpage.

    3. What is an attribute and where do we put it? ------- Attributes define additional characteristics or properties of the element. Attributes are always specified in the start tag.

    4. What is the h1 tag used for? How many times should I use it on a page? ------- The < h1 > tag is used for the main title or most important describing words of the page. It should only be used once.

    5. Name two tags that have required attributes: ------- < img > and < link >.

    6. What do we put in the head of our HTML document? ------ metadata (document title, character set, styles, links, scripts).

    7. What is an id? ------- It is a global attribute that defines a identifier which must be unique in the entire document.

    8. What elements can I add an id to? ------- All elements can have an id added as long as no two id's are the same.

    9. How many times can I use the same id on a page? ------- Once.

    10. What is a class? ------- A class is a global attribute that allows CSS and JavaScript to selevt and access certain elements via the class selectors or functions.

    11. What elements can I add a class to? ------- Any elements can have a class.

    12. How many times can I use the same class on a page? As many as you'd like... but don't go crazy.

    13. How do I get my link to open in a new tab? ------- By using target='_blank'.

    14. What is the alt attribute in the image tag used for? ------- It adds a text description to an image on a web page.

    15. How do I reference an id? ------- Refrence an id by using the # symbol followed by the id name.

    16. What is the difference between a section and a div -------  < section > means that the content inside is grouped and should appear as a entry in an outline of a page whereas < div > does not convey any meaning, aside from any found in its class, lang and title attributes.

    17. What is CSS used for? ------- Styling the page. HTML is the blueprint and CSS is the decoration.

    18. How do we select an element? Example - every h2 on the page: ------- Use the name h2 followed by curly brackets.

    19. What is the difference between a class and an id? - Give me an example of when I might use each one ------- CSS class applies a style to multiple elements. ID, on the other hand, applies a style to one unique element.
    Example: Using an id on a header image to style more specifically than other images on the page.

    20. How do we select classes in CSS? ------- By using the "." before the class name.

    21. How do we select a p element with a single class of “human””? ------- ".human p" followed by curly brackets.

    22. What is a parent child selector? When would this be useful? ------- A parent child selector selects all elements that are a direct child of the specified element. It would be useful when styling all elements in a specified parent element.

    23. How do you select all links within a div with the class of sidebar? ------- ".sidebar a" followed by curly brackets.

    24. What is a pseudo selector? ------- A selector that selects elements when they are in a specific state.

    25. What do we use to change the spacing between lines? ------- line-height: "value goes here".

    26. What do we use to change the spacing between letters? ------- letter-spacing: "value goes here".

    27. What do we use to to change everything to CAPITALS? lowercase? Capitalize? ------- text-transform: capitalize, lowercase or uppercase.

    28. How do I add a 1px border around my div that is dotted and black? ------- border: 1px dotted black;

    29. How do I select everything on the page? ------- By using the * followed by curly brackets.

    30. How do I write a comment in CSS? ------- By using the /* */ syntax.

    31. How do I find out what file I am in, when I am using the command line? ------- By typing "pwd".

    32. Using the command line - how do I see a list of files/folders in my current folder? ------- By typing "ls".

    33. How do I remove a file via the command line? Why do I have to be careful with this? ------- By using "rm". You have to becareful using this because when you do use it on a file, it is gone for good.

    34. Why should I use version control? ------- Always. It's a great way to save work and be able to revisit older versions of your work.

    35. How often should I commit to github? ------- Any time you make changes to your code.

    36. What is the command we would use to push our repo up to github? ------- "git push origin master" unless branching.

    37. Walk me through Lambda's git flow. 
        1. Fork the Repo you want to work in.
        2. Clone your Repo so that you have them on your local machine.
        3. Open Git Bash and navigate to the folder you want to clone the Repo to.
        4. Use the Git clone command and then navigate into the cloned folder.
        5. Use the "git checkout -b FirstName-LastName command to create a branch for the Repo.
        6. Use git add . to add the Repo changes and make them ready for commiting.
        7. Use git commit -m "message to explain what was done" to commit your changes to the Repo.
        8. Use git push -u origin branch-name to push all files from your local machine to Github.
        9. Now that changes have been made and pushed to Github, you can submit a pull request.
        10. Go back to YOUR forked project repo (make sure it isn't Lambdas) and click on the branch: master button, in the drop down menu select you name branch.
        11. After selecting your branch click the new pull request. After clicking the pull request you will be redirected to the pull request page.
        12. When you get to the PR page, make sure to click the dropdown button that says base repository and change it to be YOUR forked Repo instead of the original Lambda Repo.
        13. Submit the pull request link to Canvas and DO NOT MERGE YOUR OWN PULL REQUEST &!&%$









Stretch Questions

    1. What is the difference between an inline element and a block element? ------- Inline elements do not force a new line to begin, Block elements will cause a line break to occur.

    2. What happens when an element is positioned absolutely? ------- It is removed from the flow of the page and other elements act as if it doesn't exist.

    3. How do I make an element take up only the amount of space it needs but also have the ability to give it a width? ------- 
    4. Name 3 elements that are diplay block by default, 2 elements that are display inline by default and 1 element that is display inline-block by default: ------- Block elements are: <address>, <div> and <p>. Inline elements are: <button> and <input>. Inline-block element is: <img>.
    5. In your own words, explain the box model. What is the "fix" for the box model, in other words, how do we make all elements respect the width we've given them? 

        -------  The box model is a box that wraps around every HTML element. It consists of: margins, borders, padding, and the actual content. It is the set of rules that decides how a CSS element's sizes are computed as you add padding, borders, and margins around the content.
        ------- The way the question is worded is confusing to me, but CSS is my answer for how we make all elements respect the rules we give to them.